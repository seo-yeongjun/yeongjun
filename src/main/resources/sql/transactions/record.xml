<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="transactions.record">

    <!-- 수입 거래 조회 by 사용자 -->
    <select id="selectIncomeTransactionsByUser" resultType="com.yeongjun.yeongjun.transactions.model.Transaction">
        SELECT
            transaction_id, username, category_id, amount, transaction_date, memo, created_at
        FROM transactions
        WHERE username = #{username}
          AND category_id IN (
            SELECT transaction_category_id
            FROM transactions_category
            WHERE income_expense_gb = 1
        )
        ORDER BY transaction_date DESC;
    </select>

    <!-- 지출 거래 조회 by 사용자 -->
    <select id="selectExpenseTransactionsByUser" resultType="com.yeongjun.yeongjun.transactions.model.Transaction">
        SELECT
            transaction_id, username, category_id, amount, transaction_date, memo, created_at
        FROM transactions
        WHERE username = #{username}
          AND category_id IN (
            SELECT transaction_category_id
            FROM transactions_category
            WHERE income_expense_gb = 2
        )
        ORDER BY transaction_date DESC;
    </select>

    <!-- 전체 거래 조회 by 사용자 -->
    <select id="selectAllTransactionsByUser" resultType="com.yeongjun.yeongjun.transactions.model.Transaction">
        SELECT
            transaction_id, username, category_id, amount, transaction_date, memo, created_at
        FROM transactions
        WHERE username = #{username}
        ORDER BY transaction_date DESC;
    </select>

    <!-- 유저별 거래기록날짜로 조회 -->
    <select id="selectAllTransactionsByUserAndCreatedDate" resultType="com.yeongjun.yeongjun.transactions.model.Transaction">
        SELECT
        transaction_id, username,income_expense_gb, category_id, category_nm, amount, transaction_date, memo, created_at
        FROM transactions A
            LEFT JOIN transactions_category B
        ON A.category_id = B.transaction_category_id
        WHERE username = #{username}
        <if test="created_at != null">
            AND TO_CHAR(created_at,'YYYYMMDD') = TO_CHAR(#{created_at},'YYYYMMDD')
        </if>
        ORDER BY transaction_date DESC;
    </select>


    <!-- 지출 거래 조회 by 사용자, 연도, 월, 카테고리 -->
    <select id="selectExpenseTransactionsByUserAndYearMonthCategory" resultType="com.yeongjun.yeongjun.transactions.model.Transaction">
        SELECT
        transaction_id, username, category_id, amount, transaction_date, memo, created_at
        FROM transactions
        WHERE username = #{username}
        <if test="categoryId != null and categoryId != ''">
            AND category_id = #{categoryId}
        </if>
        <if test="yearMonth != null and yearMonth != ''">
            AND DATE_FORMAT(transaction_date, '%Y-%m') = #{yearMonth}
        </if>
        AND category_id IN (
        SELECT transaction_category_id
        FROM transactions_category
        WHERE income_expense_gb = 2
        )
        ORDER BY transaction_date DESC;
    </select>

    <select id="selectAllTransactionsByUserAndTransactionMonth" resultType="com.yeongjun.yeongjun.transactions.model.Transaction">
        SELECT
        transaction_id, username, category_id, category_nm,income_expense_gb, amount, transaction_date, memo, created_at
        FROM transactions A
        LEFT JOIN transactions_category B
        ON A.category_id = B.transaction_category_id
        WHERE username = #{username}
        <if test="transaction_date != null">
            AND DATE_FORMAT(transaction_date, '%Y-%m') = DATE_FORMAT(#{transaction_date}, '%Y-%m')
        </if>
        ORDER BY transaction_date DESC;
    </select>

    <select id="selectTransactionsBetweenDates" resultType="com.yeongjun.yeongjun.transactions.model.Transaction">
        <!--todo 작성하기, graph.html 만들기 후 테스트 진행-->
        SELECT
        transaction_id, username, category_id, category_nm,income_expense_gb, amount, transaction_date, memo, created_at
        FROM transactions A
        LEFT JOIN transactions_category B
        ON A.category_id = B.transaction_category_id
        WHERE username = #{username}
        <if test="start_dt != null">
            AND transaction_date between #{start_dt} and #{end_dt}
        </if>
        ORDER BY transaction_date DESC;
    </select>

    <!-- 거래 추가 -->
    <insert id="insertTransactions" parameterType="com.yeongjun.yeongjun.transactions.model.Transaction">
        INSERT INTO transactions (username, category_id, amount, transaction_date, memo, created_at)
        VALUES (#{username}, #{category_id}, #{amount}, #{transaction_date}, #{memo}, NOW());
    </insert>

    <!-- 거래 수정 -->
    <update id="updateTransactions" parameterType="com.yeongjun.yeongjun.transactions.model.Transaction">
        UPDATE transactions
        SET
            category_id = #{categoryId},
            amount = #{amount},
            transaction_date = #{transactionDate},
            memo = #{memo},
            created_at = NOW()
        WHERE transaction_id = #{transactionId};
    </update>

</mapper>
