<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="login.login">
    <select id="getUserById" resultType="com.yeongjun.yeongjun.Security.model.User">
        SELECT username,
               password,
               nickname,
               email,
               role,
               is_active,
               created_at,
               updated_at,
               email_verified,
               email_verification_token,
               email_verification_token_expiry
        FROM Users
        WHERE username = #{username}
    </select>

    <insert id="insertUser" parameterType="com.yeongjun.yeongjun.Security.model.User">
        INSERT INTO Users (username,
                           password,
                           nickname,
                           email,
                           role,
                           is_active,
                           created_at,
                           updated_at,
                           email_verified,
                           email_verification_token,
                           email_verification_token_expiry)
        VALUES (
                   #{username},
                   #{password},
                   #{nickname},
                   #{email},
                   #{role},
                   #{is_active},
                   #{created_at},
                   #{updated_at},
                   #{email_verified},
                   #{email_verification_token},
                   #{email_verification_token_expiry}
               );
    </insert>

    <select id="getUserByVerificationToken" resultType="com.yeongjun.yeongjun.Security.model.User">
        SELECT username,
               password,
               nickname,
               email,
               role,
               is_active,
               created_at,
               updated_at,
               email_verified,
               email_verification_token,
               email_verification_token_expiry
        FROM Users
        WHERE email_verification_token = #{token}
    </select>

    <update id="updateUser" parameterType="com.yeongjun.yeongjun.Security.model.User">
        UPDATE Users
        SET password = #{password},
            nickname = #{nickname},
            email = #{email},
            role = #{role},
            is_active = #{is_active},
            updated_at = #{updated_at},
            email_verified = #{email_verified},
            email_verification_token = #{email_verification_token},
            email_verification_token_expiry = #{email_verification_token_expiry}
        WHERE username = #{username}
    </update>

    <select id="getUserByEmail" resultType="com.yeongjun.yeongjun.Security.model.User">
        SELECT username,
               password,
               nickname,
               email,
               role,
               is_active,
               created_at,
               updated_at,
               email_verified,
               email_verification_token,
               email_verification_token_expiry
        FROM Users
        WHERE email = #{email}
    </select>
</mapper>
